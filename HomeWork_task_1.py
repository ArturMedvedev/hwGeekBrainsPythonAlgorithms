'''
Определение количества различных подстрок с использованием хеш-функции.
Пусть на вход функции дана строка. Требуется вернуть количество различных подстрок в этой строке.
Примечание: в сумму не включаем пустую строку и строку целиком.
'''

import hashlib

def uniq_hash(a):  # Функция принимает на вход строку.
    if a == '':  # Проверка на пустую строку по условию.
        return print('Потрачено!')
    else:
        n = len(a)
        b = []
        while n > 1:  # Цикл прохождения подстроки по строке.
            n -= 1
            i = 0
            j = n - 1
            while j <= len(a) - 1:
                _hash = hashlib.sha1((a[i:j + 1]).encode('utf-8')).hexdigest()  # Хешируем подстроку.
                if (_hash) not in b:  # Проверка на уникальность хеша.
                    b.append(_hash)  # Добавляем уникальный хеш в новый список.
                i += 1
                j += 1
        return len(b)  # Возвращаем длину списка с уникальными хешами. Это и есть ответ.

print(uniq_hash('sova'))
print(uniq_hash('papa'))
print(uniq_hash('sova papa'))
print(uniq_hash('telefon'))
print(uniq_hash(''))