'''
Задание №3 из урока №2.
Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
Например, если введено число 3486, надо вывести 6843.
Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
'''

import sys

# Вариант Ольги решения рекурсивно.

z = 3486


def num(x):
    m = x % 10
    x = int(x / 10)

    def func_var():  # Выводим переменные функции в глобальные, чтобы функция подсчета памяти их увидела.
        global b
        global c
        b = m
        c = x

    func_var()
    if x > 0:
        return f'{m}{num(x)}'
    else:
        return f'{m}'


a = num(z)
print(a, type(a))


# Функция. Память под переменные.

def mem_sum(array):
    answer = 0  # Переменная для формирования ответа.
    for itm in array:
        answer += sys.getsizeof(itm)
    return answer


arr = [z, a, b, c]  # Ручками формируем список задействованных переменных.
print('Всего под переменные задействовано памяти: ', mem_sum(arr), 'байт')
'''
Всего под переменные задействовано памяти:  133 байт
Win x64
3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)]

Это довольно нересурсоемкий по памяти вариант решения. В сравнении с первым вариантом разница "в пределах погрешности".
'''